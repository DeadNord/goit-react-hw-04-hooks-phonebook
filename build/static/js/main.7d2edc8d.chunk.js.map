{"version":3,"sources":["components/phonebook/form/Form.module.css","components/phonebook/filter/Filter.module.css","components/phonebook/section/Section.jsx","components/phonebook/form/Form.jsx","components/phonebook/contacts/Contact.jsx","components/phonebook/contacts/Contacts.jsx","components/phonebook/filter/Filter.jsx","App.js","index.js","components/phonebook/contacts/Contacts.module.css","components/phonebook/section/Section.module.css"],"names":["module","exports","Section","children","title","className","s","section","container","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","form","this","label","type","pattern","required","onChange","input","button","Component","Contact","id","deleteContact","contact","onClick","Contacts","contacts","contactsList","length","map","item","Filter","App","filter","formSubmit","data","contactData","find","elem","includes","alert","text","userId","nanoid","prevState","filterChange","contactId","filterContacts","normalizeFilter","toLowerCase","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filterContact","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.7d2edc8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__4PRd7\",\"label\":\"Form_label__11SjS\",\"name\":\"Form_name__1_3rw\",\"input\":\"Form_input__6333_\",\"button\":\"Form_button__2EGy7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Filter_name__2qJTg\",\"input\":\"Filter_input__qTKi9\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <div className={s.container}>\r\n        <h2 className={s.title}>{title}</h2>\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          <p className={s.name}>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          <p className={s.name}>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nconst Contact = ({ name, number, id, deleteContact }) => {\r\n  return (\r\n    <li className={s.contact}>\r\n      <p>\r\n        <span className={s.name}>{name}</span>: {number}\r\n      </p>\r\n      <button className={s.button} onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default Contact;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport Contact from './Contact';\r\n\r\nconst Contacts = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {contacts.length > 0 &&\r\n        contacts.map(item => (\r\n          <Contact\r\n            key={item.id}\r\n            name={item.name}\r\n            number={item.number}\r\n            id={item.id}\r\n            deleteContact={deleteContact}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default Contacts;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      <p className={s.name}>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        onChange={onChange}\r\n        value={value}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\n\n// importComponent\nimport Section from './components/phonebook/section/Section';\nimport Form from './components/phonebook/form/Form';\nimport Contacts from './components/phonebook/contacts/Contacts';\nimport Filter from './components/phonebook/filter/Filter';\n\n// importScripts\nimport { alert } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport { nanoid } from 'nanoid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  formSubmit = data => {\n    const contactData = this.state.contacts.find(elem =>\n      elem.name.includes(data.name),\n    );\n\n    if (contactData) {\n      const existUserAlert = alert({\n        title: 'Alert',\n        text: `${contactData.name} is already in contacts`,\n      });\n    } else {\n      const userId = { id: nanoid() };\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, { ...userId, ...data }],\n      }));\n    }\n  };\n\n  filterChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  filterContacts = () => {\n    const normalizeFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({\n        contacts: contacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.contacts !== prevProps.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filterContact = this.filterContacts();\n    return (\n      <>\n        <Section title={'Phonebook'}>\n          <Form onSubmit={this.formSubmit} />\n        </Section>\n        <Section title={'Contacts'}>\n          <Filter value={this.state.filter} onChange={this.filterChange} />\n          <Contacts\n            contacts={filterContact}\n            deleteContact={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__CdmSM\",\"contact\":\"Contacts_contact__23_79\",\"name\":\"Contacts_name__1SVW_\",\"button\":\"Contacts_button__1LQy3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3rOVG\",\"container\":\"Section_container__3X-Zq\",\"title\":\"Section_title__3g6YZ\"};"],"sourceRoot":""}